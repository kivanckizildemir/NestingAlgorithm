<?xml version="1.0" encoding="utf-8"?>
<!-- //inventor/Main/sources/AddInApps/CCClient/AddIn/CCV2/App.config -->
<!-- This App.config file is copied to Bin\Inventor.exe.config by //inventor/Main/sources/AddInApps/CCClient/AddIn/CCV2/PostBuild.bat -->
<configuration>
  <configSections>
    <sectionGroup name="autodesk.inventor.content">
      <section name="logging" type="System.Configuration.DictionarySectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, Custom=null"/>
    </sectionGroup>
    <section name="microsoft.web.services3" type="Microsoft.Web.Services3.Configuration.WebServicesConfiguration, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>

  <appSettings>
    <!-- Controls client cache allocation limit. MaxCachedObjects controls the maximum number
		 of cached objects before a purge is done. CachePurgeInterval controls how many objects
		 are removed when a purge is done -->
    <add key="Connectivity.Content.MaxCachedObjects" value="500"/>
    <add key="Connectivity.Content.CachePurgeInterval" value="100"/>
    <add key="Connectivity.Content.MaxSearchResults" value="2500"/>
    <!-- WebService timeout (in milliseconds) -->
    <add key="WebServiceTimeout" value="1000000"/>
    <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />
  </appSettings>

  <microsoft.web.services3>
    <messaging>
      <maxMessageLength value="51200"/>
      <mtom clientMode="On" maxMimeParts="1024"/>
    </messaging>
    <security>
      <!-- Specifies the time buffer used by WSE to determine when a SOAP message is valid.
           Set to the max of 24hr in seconds. -->
      <timeToleranceInSeconds value="86400" />
    </security>
  </microsoft.web.services3>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
  </startup>
  <!-- .NET 3.5 and earlier allowed managed code to catch access violations and other corrupted
       process states.  Starting in .NET 4.0, managed code no longer catches these exceptions.
       The "legacyCorruptedStateExceptionsPolicy" element restores the .NET 3.5 behavior.
	   
       "loadFromRemoteSources" allows DLLs to load from network shares. Customers have requested
       this capability in iLogic rules. -->
  <runtime>
    <legacyCorruptedStateExceptionsPolicy enabled="true"/>
    <loadFromRemoteSources enabled="true"/>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
	<AppContextSwitchOverrides value="Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols=false;Switch.System.Net.DontEnableSchUseStrongCrypto=false" />
  </runtime>
</configuration>
